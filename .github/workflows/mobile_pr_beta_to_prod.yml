name: '- 3 | [mobile] Generate PR for releases/[versionNumber] to releases/prod'

# This CI job is responsible for generating PRs that bring the HEAD of releases/[marketingVersionNumber] into releases/prod.
# These PRs are meant to be the only (standard) way that code is merged into the releases/prod
# branch.
#
# https://github.com/peter-evans/create-pull-request/blob/main/docs/examples.md#keep-a-branch-up-to-date-with-another

on:
  workflow_dispatch:

jobs:
  prod-gen-pr:
    name: 'Generate PR for merging to releases/prod branch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e
        with:
          token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
          ref: main

      - name: 📢 Get marketing version number
        uses: ./.github/actions/mobile_marketing_version
        id: marketing-version
        with:
          app-store-connect-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          app-store-connect-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          app-store-connect-key-content: ${{ secrets.APP_STORE_CONNECT_KEY_CONTENT }}

      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e
        with:
          token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
          ref: releases/prod

      - name: Reset promotion branch
        run: |
          git fetch origin releases/${{ steps.marketing-version.outputs.marketing-version }}:releases/${{ steps.marketing-version.outputs.marketing-version }}
          git reset --hard releases/${{ steps.marketing-version.outputs.marketing-version }}

      - name: Setup git
        run: |
          git config user.name "UL Mobile Service Account"
          git config user.email "hello-happy-puppy@users.noreply.github.com"

      - name: 𝒳 Set env variables
        run: |
          echo "TIME=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
          echo "TIME_S=$(date +"%s")" >> $GITHUB_ENV
          echo "BETA_REV=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: '#️⃣ update release hash'
        run: |
          git rev-parse HEAD > apps/mobile/.releasehash
          git commit -m "ci(mobile): update release hash for CODEOWNERS enforcement"

      - uses: peter-evans/create-pull-request@ea54357f43e3d1cf1125471d0814f4d02cc0d364
        id: cpr
        with:
          token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
          commit-message: "This PR merges latest commits of `releases/beta` to `releases/prod`. Upon approval and successful merge, a Github action associated with the prod Fastlane setup will deploy to TestFlight, where the app can be submitted to Apple."
          base: 'releases/prod'
          title: 'ci: Release Beta to Prod'
          delete-branch: 'true'
          committer: 'UL Service Account <hello-happy-puppy@users.noreply.github.com>'
          author: 'UL Service Account <hello-happy-puppy@users.noreply.github.com>'
          branch: 'approvals/betaToProd'

      - uses: peter-evans/enable-pull-request-automerge@60812ab1c2c6c6a8932b4d6e059becafaf386256
        with:
          token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: merge

      - name: Update PR body
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "### Description" > /tmp/foo
          echo "" >> /tmp/foo
          echo "This PR promotes the following commits from releases/${{ steps.marketing-version.outputs.marketing-version }} to prod." >> /tmp/foo
          echo "" >> /tmp/foo
          gh pr view ${{ steps.cpr.outputs.pull-request-number }} --json commits | jq '.commits[] | [.oid, .messageHeadline] | @tsv' | sed 's/"//g' | sed 's/\\t/ - /g' >> /tmp/foo
          echo "" >> /tmp/foo
          echo "**Once approved this PR will automatically merge via a merge commit.**" >> /tmp/foo
          gh pr edit ${{ steps.cpr.outputs.pull-request-number }} -b "$(cat /tmp/foo)"
