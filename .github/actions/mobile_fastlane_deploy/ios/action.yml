name: '[mobile] fastlane deploy'

description: 'Deploys fastlane for the given environment and app identifiers'
inputs:
  amplitude-experiments-deploy-key:
    description: 'passed secret value'
    required: true
  apple-app-id:
    description: 'the apple app id for this deployment'
    required: true
  apple-id:
    description: 'passed secret value'
    required: true
  apple-team-id:
    description: 'passed secret value'
    required: true
  app-identifier:
    description: 'the apple app identifier for this deployment'
    required: true
  app-store-connect-issuer-id:
    description: 'passed secret value'
    required: true
  app-store-connect-key-content:
    description: 'passed secret value'
    required: true
  app-store-connect-key-id:
    description: 'passed secret value'
    required: true
  appsflyer-api-key:
    description: 'passed secret value'
    required: true
  appsflyer-app-id:
    description: 'passed secret value'
    required: true
  branch:
    description: 'the branch to run this deployment for'
    required: true
  ci-keychain-password:
    description: 'passed secret value'
    required: true
  configuration:
    description: 'the iOS deploy configuration for this deployment'
    required: true
  github-token:
    description: 'passed secret value'
    required: true
  infura-project-id:
    description: 'passed secret value'
    required: true
  match-password:
    description: 'passed secret value'
    required: true
  moonpay-api-key:
    description: 'passed secret value'
    required: true
  moonpay-api-url:
    description: 'passed secret value'
    required: true
  moonpay-widget-api-url:
    description: 'passed secret value'
    required: true
  onesignal-app-id:
    description: 'the onesignal app id for this deployment'
    required: true
  quicknode-bnb-rpc-url:
    description: 'passed secret value'
    required: true
  sentry-auth-token:
    description: 'passed secret value'
    required: true
  sentry-dsn:
    description: 'passed secret value'
    required: true
  sentry-env:
    description: 'the sentry env for this deployment'
    required: true
  sentry-org:
    description: 'passed secret value'
    required: true
  sentry-project:
    description: 'passed secret value'
    required: true
  simplehash-api-key:
    description: 'passed secret value'
    required: true
  simplehash-api-url:
    description: 'passed secret value'
    required: true
  statsig-api-key:
    description: 'passed secret value'
    required: true
  statsig-proxy-url:
    description: 'passed secret value'
    required: true
  uniswap-api-key:
    description: 'passed secret value'
    required: true
  url-to-fastlane-certificates-repo:
    description: 'passed secret value'
    required: true
  walletconnect-project-id:
    description: 'passed secret value'
    required: true

runs:
  using: 'composite'
  steps:
    # Set up xcode version
    - uses: maxim-lobanov/setup-xcode@4aa4176a819ae7c019451acfda0bba67bffc6704
      with:
        xcode-version: '15'

    # Set path variables needed for caches
    - name: 𝒳 Set workflow variables
      shell: bash
      id: workflow-variables
      run: |
        echo "::set-output name=xcode-version::$(xcodebuild -version|tail -1|cut -f3 -d' ')"

    # Detox is compiled during yarn install, using Xcode, set up cache first
    - uses: hendrikmuhs/ccache-action@ed038da2f2f09b0c8387c00e1498290a4808da2e
      name: 🧑‍💻 Xcode Compile Cache
      with:
        key: ${{ runner.os }}-v2 # makes a unique key w/related restore key internally
        max-size: 400M

    - name: Update Ruby build tools
      uses: nick-fields/retry@7d4a37704547a311dbb66ebdf5b23ec19374a767
      with:
        timeout_minutes: 2
        retry_wait_seconds: 2
        max_attempts: 3
        command: gem uninstall -a --no-executables cocoapods && gem install cocoapods -v 1.13.0 && gem update xcodeproj

    - uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
      name: 📀 Retrieve or Store Pods Cache
      id: pods-cache
      with:
        path: ./apps/mobile/ios/Pods
        key: ${{ runner.os }}-pods-v2-${{ hashFiles('**/Podfile.lock') }}

    - name: 🗄️ Copy over env variables
      uses: nick-fields/retry@7d4a37704547a311dbb66ebdf5b23ec19374a767
      with:
        timeout_minutes: 20
        retry_wait_seconds: 2
        max_attempts: 3
        command: yarn mobile env:local:copy:swift
      env:
        UNISWAP_API_KEY: ${{ inputs.uniswap-api-key }}

    - name: 🫛 Pod Install
      uses: nick-fields/retry@7d4a37704547a311dbb66ebdf5b23ec19374a767
      with:
        timeout_minutes: 20
        retry_wait_seconds: 2
        max_attempts: 3
        command: cd apps/mobile/ios && pod install && cd ..

    - name: 🦤 Generate GraphQL schemas and queries for Swift
      uses: nick-fields/retry@7d4a37704547a311dbb66ebdf5b23ec19374a767
      with:
        timeout_minutes: 3
        retry_wait_seconds: 20
        max_attempts: 3
        command: yarn mobile graphql:generate:swift

    - name: 📲 Build + deploy iOS app
      working-directory: ./apps/mobile
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        export CCACHE_SLOPPINESS=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros
        export CCACHE_FILECLONE=true
        export CCACHE_DEPEND=true
        export CCACHE_INODECACHE=true
        ccache -s
        set -o pipefail
        fastlane ios buildAndShip
        ccache -s
      shell: bash
      env:
        AMPLITUDE_EXPERIMENTS_DEPLOYMENT_KEY: ${{ inputs.amplitude-experiments-deploy-key }}
        APP_IDENTIFIER: ${{ inputs.app-identifier }}
        APPLE_APP_ID: ${{ inputs.apple-app-id }}
        APPLE_ID: ${{ inputs.apple-id }}
        APPLE_TEAM_ID: ${{ inputs.apple-team-id }}
        APPSFLYER_API_KEY: ${{ inputs.appsflyer-api-key }}
        APPSFLYER_APP_ID: ${{ inputs.appsflyer-app-id }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ inputs.app-store-connect-issuer-id }}
        APP_STORE_CONNECT_KEY_CONTENT: ${{ inputs.app-store-connect-key-content }}
        APP_STORE_CONNECT_KEY_ID: ${{ inputs.app-store-connect-key-id }}
        CI: true
        CI_KEYCHAIN_NAME: 'CI_KEYCHAIN'
        CI_KEYCHAIN_PASSWORD: ${{ inputs.ci-keychain-password }}
        CONFIGURATION: ${{ inputs.configuration }}
        GIT_BRANCH_NAME: ${{ github.ref }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        INFURA_PROJECT_ID: ${{ inputs.infura-project-id }}
        MATCH_PASSWORD: ${{ inputs.match-password }}
        MOONPAY_API_KEY: ${{ inputs.moonpay-api-key }}
        MOONPAY_API_URL: ${{ inputs.moonpay-api-url }}
        MOONPAY_WIDGET_API_URL: ${{ inputs.moonpay-widget-api-url }}
        ONESIGNAL_APP_ID: ${{ inputs.onesignal-app-id }}
        QUICKNODE_BNB_RPC_URL: ${{ inputs.quicknode-bnb-rpc-url }}
        SENTRY_AUTH_TOKEN: ${{ inputs.sentry-auth-token }}
        SENTRY_DSN: ${{ inputs.sentry-dsn }}
        SENTRY_ORG: ${{ inputs.sentry-org }}
        SENTRY_PROJECT: ${{ inputs.sentry-project }}
        STATSIG_API_KEY: ${{ inputs.statsig-api-key }}
        STATSIG_PROXY_URL: ${{ inputs.statsig-proxy-url }}
        SIMPLEHASH_API_KEY: ${{ inputs.simplehash-api-key }}
        SIMPLEHASH_API_URL: ${{ inputs.simplehash-api-url }}
        UNISWAP_API_KEY: ${{ inputs.uniswap-api-key }}
        URL_TO_FASTLANE_CERTIFICATES_REPO: ${{ inputs.url-to-fastlane-certificates-repo }}
        WALLETCONNECT_PROJECT_ID: ${{ inputs.walletconnect-project-id }}

    - name: Write env variables to text files
      shell: bash
      run: |
        echo "${{ env.IOS_VERSION_NUMBER }}" > ./apps/mobile/ios_version_number.txt
        echo "${{ env.IOS_BUILD_NUMBER }}" > ./apps/mobile/ios_build_number.txt

    - name: 📦 Save iOS version and build number as artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ios-vars
        path: |
          ./apps/mobile/ios_version_number.txt
          ./apps/mobile/ios_build_number.txt
