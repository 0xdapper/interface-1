// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "display": "flex",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "display": "flex",
          "marginBottom": 24,
          "marginHorizontal": 16,
        },
      ]
    }
  >
    <TextInput
      animatedStyle={
        Object {
          "value": Object {},
        }
      }
      collapsable={false}
      editable={false}
      style={
        Object {
          "color": "#070A15",
          "fontFamily": "Inter-Medium",
          "fontSize": 36,
          "fontWeight": "300",
          "lineHeight": 44,
        }
      }
      text="$100"
      underlineColorAndroid="transparent"
      value="$100"
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <TextInput
          animatedStyle={
            Object {
              "value": Object {},
            }
          }
          collapsable={false}
          editable={false}
          style={
            Object {
              "color": "#5F667D",
              "fontFamily": "Inter-Regular",
              "fontSize": 12,
              "lineHeight": 16,
            }
          }
          text="-50%"
          underlineColorAndroid="transparent"
          value="-50%"
        />
        <View
          style={
            Array [
              Object {
                "display": "flex",
                "flexGrow": 0,
                "flexShrink": 0,
                "height": 0,
                "width": 0,
              },
            ]
          }
        />
        <TextInput
          animatedStyle={
            Object {
              "value": Object {
                "color": "#FD4040",
              },
            }
          }
          collapsable={false}
          editable={false}
          style={
            Object {
              "color": "#FD4040",
              "fontFamily": "Inter-Regular",
              "fontSize": 12,
              "lineHeight": 16,
            }
          }
          text="↘"
          underlineColorAndroid="transparent"
          value="↘"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "display": "flex",
              "flexGrow": 0,
              "flexShrink": 0,
              "height": 4,
              "width": 4,
            },
          ]
        }
      />
      <TextInput
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        editable={false}
        style={
          Object {
            "color": "#5F667D",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
            "lineHeight": 16,
          }
        }
        text=""
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "display": "flex",
          "marginVertical": 12,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={180}
      bbWidth={750}
      focusable={false}
      height={180}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 180,
            "width": 750,
          },
        ]
      }
      width={750}
    >
      <RNSVGGroup>
        <RNSVGPath
          d="M0,0 C0,0 62.5,15 62.5,15 C125,30 250,60 375,90 C500,120 625,150 687.5,165 C687.5,165 750,180 750,180"
          fill={0}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          stroke={4293867150}
          strokeWidth={2}
        />
        <RNSVGDefs>
          <RNSVGLinearGradient
            gradient={
              Array [
                0,
                871315086,
                1,
                15677070,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="gradient"
            x1="50%"
            x2="50%"
            y1="0%"
            y2="100%"
          />
        </RNSVGDefs>
        <RNSVGPath
          d="M0,0 C0,0 62.5,15 62.5,15 C125,30 250,60 375,90 C500,120 625,150 687.5,165 C687.5,165 750,180 750,180 L 750 180 L 0 180"
          fill={
            Array [
              1,
              "gradient",
            ]
          }
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          stroke={0}
          strokeWidth={3}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <View
      style={
        Array [
          Object {
            "display": "flex",
            "flex": 1,
          },
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        forwardedRef={[Function]}
        handlerTag={1}
        handlerType="PanGestureHandler"
        onGestureHandlerEvent={[Function]}
        style={
          Array [
            Object {
              "display": "flex",
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [
                  Object {
                    "translateX": -25,
                  },
                  Object {
                    "translateY": -25,
                  },
                  Object {
                    "scale": 0,
                  },
                ],
              },
            }
          }
          collapsable={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 999999,
                "display": "flex",
                "height": 50,
                "justifyContent": "center",
                "width": 50,
              },
              Object {
                "backgroundColor": "rgba(243, 71, 191, 0.171)",
                "transform": Array [
                  Object {
                    "translateX": -25,
                  },
                  Object {
                    "translateY": -25,
                  },
                  Object {
                    "scale": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#EF368E",
                  "borderRadius": 999999,
                  "display": "flex",
                  "height": 15,
                  "width": 15,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "display": "flex",
          "flexDirection": "row",
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "transform": Array [
                Object {
                  "translateX": 150,
                },
              ],
            },
          }
        }
        collapsable={false}
        style={
          Array [
            Object {
              "backgroundColor": "#F4F6FE",
              "borderRadius": 16,
              "display": "flex",
              "width": 150,
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 150,
                },
              ],
            },
          ]
        }
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "display": "flex",
            "padding": 8,
            "width": 150,
          },
        ]
      }
    >
      <Text
        animatedStyle={
          Object {
            "value": Object {
              "color": "#5F667D",
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#5F667D",
            "display": "flex",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 14,
            "lineHeight": 16,
            "textAlign": "center",
          }
        }
      >
        Graph 0
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "display": "flex",
            "padding": 8,
            "width": 150,
          },
        ]
      }
    >
      <Text
        animatedStyle={
          Object {
            "value": Object {
              "color": "rgba(7, 10, 21, 1)",
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "rgba(7, 10, 21, 1)",
            "display": "flex",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 14,
            "lineHeight": 16,
            "textAlign": "center",
          }
        }
      >
        Graph 1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "display": "flex",
            "padding": 8,
            "width": 150,
          },
        ]
      }
    >
      <Text
        animatedStyle={
          Object {
            "value": Object {
              "color": "#5F667D",
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#5F667D",
            "display": "flex",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 14,
            "lineHeight": 16,
            "textAlign": "center",
          }
        }
      >
        Graph 2
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "display": "flex",
            "padding": 8,
            "width": 150,
          },
        ]
      }
    >
      <Text
        animatedStyle={
          Object {
            "value": Object {
              "color": "#5F667D",
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#5F667D",
            "display": "flex",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 14,
            "lineHeight": 16,
            "textAlign": "center",
          }
        }
      >
        Graph 3
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "display": "flex",
            "padding": 8,
            "width": 150,
          },
        ]
      }
    >
      <Text
        animatedStyle={
          Object {
            "value": Object {
              "color": "#5F667D",
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#5F667D",
            "display": "flex",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 14,
            "lineHeight": 16,
            "textAlign": "center",
          }
        }
      >
        Graph 4
      </Text>
    </View>
  </View>
</View>
`;
